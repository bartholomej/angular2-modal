{"version":3,"sources":["../../../src/lib/components/css-dialog-container.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EACL,SAAS,EAKT,iBAAiB,EACjB,UAAU,EACV,QAAQ,EACT,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,oBAAA,EAAqB,MAAO,0BAAA,CAA2B;AAChE,OAAO,EAAE,SAAA,EAAU,MAAO,sBAAA,CAAuB;AAGjD;;GAEG;AAEH;IAAwC,sCAAoB;IAE1D,4BAAmB,MAAsB,EAC7B,EAAc,EAAE,QAAkB;QAD9C,YAEE,kBAAM,EAAE,EAAE,QAAQ,CAAC,SAEpB;QAJkB,YAAM,GAAN,MAAM,CAAgB;QAGvC,KAAI,CAAC,yBAAyB,EAAE,CAAC;;IACnC,CAAC;IAkBH,yBAAC;AAAD,CAxBA,AAwBC,CAxBuC,oBAAoB;;AAOrD,6BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,sBAAsB;gBAChC,IAAI,EAAE;oBACJ,UAAU,EAAE,IAAI;oBAChB,MAAM,EAAE,QAAQ;iBACjB;gBACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE,2BAA2B;aACtC,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,iCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;CACjB,EAJ6F,CAI7F,CAAC","file":"css-dialog-container.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ComponentRef,\n  ViewContainerRef,\n  ResolvedReflectiveProvider,\n  ViewChild,\n  ViewEncapsulation,\n  ElementRef,\n  Renderer\n} from '@angular/core';\n\nimport { BaseDynamicComponent } from './base-dynamic-component';\nimport { DialogRef } from '../models/dialog-ref';\nimport { Class } from '../framework/utils';\n\n/**\n * A component that acts as a top level container for an open modal window.\n */\n\nexport class CSSDialogContainer extends BaseDynamicComponent {\n\n  constructor(public dialog: DialogRef<any>,\n              el: ElementRef, renderer: Renderer) {\n    super(el, renderer);\n    this.activateAnimationListener();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'css-dialog-container',\n  host: {\n    'tabindex': '-1',\n    'role': 'dialog'\n  },\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DialogRef, },\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}