{"version":3,"sources":["../../../../src/lib/plugins/js-native/modal.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,EAAE,UAAA,EAA8C,MAAO,eAAA,CAAgB;AAE9E,OAAO,EAGL,OAAO,EACP,YAAY,EACZ,KAAK,IAAI,MAAA,EACV,MAAM,gBAAA,CAAiB;AAExB,OAAO,EAAE,qBAAA,EAAsB,MAAO,4BAAA,CAA6B;AAGnE;IAA2B,yBAAM;IAC/B,eAAY,OAAgB;eAC1B,kBAAM,OAAO,CAAC;IAChB,CAAC;IAED,qBAAK,GAAL;QACE,MAAM,CAAC,IAAI,qBAAqB,CAAC,IAAI,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED,sBAAM,GAAN;QACE,MAAM,CAAC,IAAI,qBAAqB,CAAC,IAAI,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC;IAED,uBAAO,GAAP;QACE,MAAM,CAAC,IAAI,qBAAqB,CAAC,IAAI,EAAE,YAAY,CAAC,OAAO,CAAC,CAAC;IAC/D,CAAC;IAES,sBAAM,GAAhB,UAAiB,SAAyB,EACzB,IAAS,EACT,QAAgB;QAC/B,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IASH,YAAC;AAAD,CA9BA,AA8BC,CA9B0B,MAAM;;AAuB1B,gBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,oBAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,OAAO,GAAG;CAChB,EAF6F,CAE7F,CAAC","file":"modal.js","sourceRoot":"","sourcesContent":["import { Injectable, ResolvedReflectiveProvider as RRP } from '@angular/core';\n\nimport {\n  DialogRef,\n  Maybe,\n  Overlay,\n  DROP_IN_TYPE,\n  Modal as Modal_\n} from 'angular2-modal';\n\nimport { JSNativePresetBuilder } from './presets/js-native-preset';\n\n\nexport class Modal extends Modal_ {\n  constructor(overlay: Overlay) {\n    super(overlay);\n  }\n\n  alert(): JSNativePresetBuilder {\n    return new JSNativePresetBuilder(this, DROP_IN_TYPE.alert);\n  }\n\n  prompt(): JSNativePresetBuilder {\n    return new JSNativePresetBuilder(this, DROP_IN_TYPE.prompt);\n  }\n\n  confirm(): JSNativePresetBuilder {\n    return new JSNativePresetBuilder(this, DROP_IN_TYPE.confirm);\n  }\n\n  protected create(dialogRef: DialogRef<any>,\n                   type: any,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n    return dialogRef;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n];\n}\n\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}